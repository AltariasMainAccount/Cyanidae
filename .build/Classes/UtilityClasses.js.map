{
  "version": 3,
  "sources": ["../../Classes/UtilityClasses.ts"],
  "sourcesContent": ["import * as fs from 'fs';\nimport * as path from 'path';\nimport { ConsoleIOManager } from './ConsoleClasses';\n\nexport class Color {\n    red: number;\n    green: number;\n    blue: number;\n\n    constructor(colors: number[]) {\n        this.red = colors[0];\n        this.green = colors[1];\n        this.blue = colors[2];\n    }\n\n    SetColorByRGB (r: number, g: number, b: number): void {\n        this.red = r;\n        this.green = g;\n        this.blue = b;\n    }\n\n    SetColorByHSV (hue: number, sat: number, val: number): void {\n        this.red = Math.round(hue * 255);\n        this.green = Math.round(sat * 255);\n        this.blue = Math.round(val * 255);\n    }\n\n    SetColorByHex (hex: string): void {\n        let HexData = hex.replace(/^(?:0*(x|#|h))/gmi, '').match(/.{2}/g);\n\n        if (HexData) {\n            this.red = parseInt(HexData[0], 16);\n            this.green = parseInt(HexData[1], 16);\n            this.blue = parseInt(HexData[2], 16);   \n        }\n    }\n\n    GetColorAsArray (): number[] {\n        return [\n            this.red,\n            this.green,\n            this.blue\n        ];\n    }\n    \n    GetForegroundColorAsASCII (): string {\n        return `\\u001b[38;2;${this.red};${this.green};${this.blue}m`;\n    }\n\n    GetBackgroundColorAsASCII (): string {\n        return `\\u001b[48;2;${this.red};${this.green};${this.blue}m`;\n    }\n}\n\ninterface ConfigData {\n    paths: {\n        sessionPath: string;\n    }\n    defaultColorSet: {\n        warn: number[];\n        err: number[];\n        info: number[];\n        debug: number[];\n    }\n}\n\nexport class ConfigurationManager {\n    private Parent: ConsoleIOManager;\n    \n    ConfigLocation: string | undefined;\n    LoadedConfig: ConfigData | undefined;\n    \n    private DefaultConfig: ConfigData = {\n        paths: {\n            sessionPath: __dirname + \"../../Sessions\",\n        },\n        defaultColorSet: {\n            warn: [255, 255, 0],\n            err: [255, 0, 0],\n            info: [60, 60, 60],\n            debug: [0, 255, 255]\n        }\n    }\n\n    constructor(parent: ConsoleIOManager) {\n        this.Parent = parent;\n\n        let configPath = path.join(__dirname, \"../../consoon.json\");\n\n        if (fs.existsSync(configPath)) {        \n            let Config = fs.readFileSync(configPath);\n            let ConfigurationData = JSON.parse(Config.toString());\n    \n            this.ConfigLocation = configPath;\n            this.LoadedConfig = ConfigurationData;\n        } else {\n            this.Parent.Logger.Write(\"Configuration file is missing or obstructed\", \"err\");\n\n            this.LoadedConfig = this.DefaultConfig;\n        }\n    }\n\n    GetConfig(): ConfigData {\n        return this.LoadedConfig!;\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AACpB,WAAsB;AAGf,YAAY;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,QAAkB;AAC1B,SAAK,MAAM,OAAO;AAClB,SAAK,QAAQ,OAAO;AACpB,SAAK,OAAO,OAAO;AAAA;AAAA,EAGvB,cAAe,GAAW,GAAW,GAAiB;AAClD,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA;AAAA,EAGhB,cAAe,KAAa,KAAa,KAAmB;AACxD,SAAK,MAAM,KAAK,MAAM,MAAM;AAC5B,SAAK,QAAQ,KAAK,MAAM,MAAM;AAC9B,SAAK,OAAO,KAAK,MAAM,MAAM;AAAA;AAAA,EAGjC,cAAe,KAAmB;AAC9B,QAAI,UAAU,IAAI,QAAQ,qBAAqB,IAAI,MAAM;AAEzD,QAAI,SAAS;AACT,WAAK,MAAM,SAAS,QAAQ,IAAI;AAChC,WAAK,QAAQ,SAAS,QAAQ,IAAI;AAClC,WAAK,OAAO,SAAS,QAAQ,IAAI;AAAA;AAAA;AAAA,EAIzC,kBAA6B;AACzB,WAAO;AAAA,MACH,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA;AAAA,EAIb,4BAAqC;AACjC,WAAO,UAAe,KAAK,OAAO,KAAK,SAAS,KAAK;AAAA;AAAA,EAGzD,4BAAqC;AACjC,WAAO,UAAe,KAAK,OAAO,KAAK,SAAS,KAAK;AAAA;AAAA;AAgBtD,2BAA2B;AAAA,EACtB;AAAA,EAER;AAAA,EACA;AAAA,EAEQ,gBAA4B;AAAA,IAChC,OAAO;AAAA,MACH,aAAa,YAAY;AAAA;AAAA,IAE7B,iBAAiB;AAAA,MACb,MAAM,CAAC,KAAK,KAAK;AAAA,MACjB,KAAK,CAAC,KAAK,GAAG;AAAA,MACd,MAAM,CAAC,IAAI,IAAI;AAAA,MACf,OAAO,CAAC,GAAG,KAAK;AAAA;AAAA;AAAA,EAIxB,YAAY,QAA0B;AAClC,SAAK,SAAS;AAEd,QAAI,aAAa,KAAK,KAAK,WAAW;AAEtC,QAAI,GAAG,WAAW,aAAa;AAC3B,UAAI,SAAS,GAAG,aAAa;AAC7B,UAAI,oBAAoB,KAAK,MAAM,OAAO;AAE1C,WAAK,iBAAiB;AACtB,WAAK,eAAe;AAAA,WACjB;AACH,WAAK,OAAO,OAAO,MAAM,+CAA+C;AAExE,WAAK,eAAe,KAAK;AAAA;AAAA;AAAA,EAIjC,YAAwB;AACpB,WAAO,KAAK;AAAA;AAAA;",
  "names": []
}
